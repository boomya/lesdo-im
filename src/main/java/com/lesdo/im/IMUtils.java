package com.lesdo.im;import com.lesdo.im.packetExtension.HeadImageIDExtension;import com.lesdo.im.packetExtension.NickNameExtension;import com.lesdo.im.packetExtension.Received;import com.lesdo.im.packetExtension.SendTimeExtension;import com.lesdo.im.util.DesUtil;import com.lesdo.im.util.SystemGlobals;import org.apache.log4j.Logger;import org.jivesoftware.smack.Connection;import org.jivesoftware.smack.packet.Message;import org.jivesoftware.smack.packet.Message.Type;import java.util.List;public class IMUtils {    private final static Logger log = Logger.getLogger(IMUtils.class);    //	private static String P_IP = "115.29.33.189";   //正式    private static String P_IP     = SystemGlobals.get("p_ip");    private static String adminId  = SystemGlobals.get("senderID");    private static String password = SystemGlobals.get("senderpwd");    public static void sendMsg(List<Long> sentToUserIds, String msg) {        Connection con = null;        try {            con = OpenfireIM.getConnection();            con.connect();            // 正式环境下1222的账号密码            // con.login("1222", "b59c67bf196a4758191e42f76670ceba");//            // 测试环境下的1222账号密码            con.login(adminId, password);            // con.loginAnonymously();// 匿名登录。            System.out.println("Authenticated = " + con.isAuthenticated()                               + "  " + con.getUser());            Message m = new Message();            // 加密消息体            msg = DesUtil.encryptDES(msg, "12345678");			m.setBody(msg);			m.setSubject("text");			m.setType(Type.chat);			SendTimeExtension sendTime = new SendTimeExtension();			sendTime.setSendTime(System.currentTimeMillis() / 1000);			NickNameExtension nickName = new NickNameExtension();			nickName.setNickName("小Do");			HeadImageIDExtension headImageID = new HeadImageIDExtension();			// headImageID.setHeadImageID("157585_160_160");			headImageID.setHeadImageID("158157_160_160");			Received received = new Received(); 			m.addExtension(sendTime);			m.addExtension(nickName);			m.addExtension(headImageID);			m.addExtension(received);			for(Long sentToUserId : sentToUserIds){				m.setTo(sentToUserId + "@" + P_IP);				con.sendPacket(m);			}		} catch (Exception e) {			log.error("消息发送失败，" + e.getMessage(), e);		} finally {			try {				if (con != null)					con.disconnect();			} catch (Exception e) {				log.error("断开连接出错，" + e.getMessage(), e);			}		}	}}